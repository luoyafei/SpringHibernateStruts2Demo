<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
          ">
     <context:annotation-config />
     <context:component-scan base-package="com.luo" />
     <bean id="logInterceptor" class="com.luo.log.LogInterceptor" />
     
     <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	     <property name="driverClassName" value="com.mysql.jdbc.Driver" />
	  	 <property name="url" value="jdbc:mysql://localhost:3306/springdemo" />
	  	 <property name="username" value="root" />
	  	 <property name="password" value="root" />
	 </bean>
     <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
	    <property name="dataSource" ref="dataSource"/>
	    <property name="annotatedClasses">
	    	<list>
	            <value>com.luo.bean.User</value>
	        </list>
	    </property>
	    <property name="hibernateProperties">
		    <props>
		        <prop key="hibernate.dialect">org.hibernate.dialect.MySQLInnoDBDialect</prop>
		        <prop key="show_sql">true</prop>
		        <prop key="format_sql">true</prop>
		    </props>
		</property>
	</bean>
	
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
	  <property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- <tx:annotation-driven transaction-manager="txManager" /> -->
	<!-- 使用xml事务 -->
	<aop:config>
		<aop:pointcut id="businessService" expression="execution(public * com.luo.service..*.*(..))"/>
		<aop:advisor pointcut-ref="businessService" advice-ref="tx-advice"/>
	</aop:config>
	<tx:advice id="tx-advice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="save" propagation="REQUIRED"/>
			<tx:method name="getUser*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
		
	
     <aop:config>
     	<aop:pointcut expression="execution(public void com.luo.dao.daoImpl.UserDaoImpl.save(com.luo.bean.User))" id="pc"/>
     	<aop:aspect id="asp" ref="logInterceptor">
     		<aop:before pointcut-ref="pc" method="log" />
     	</aop:aspect>
     </aop:config>
     
     <!-- 
     使用mybatis的配置
      <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
	      <property name="configLocation" value="mybatisConfig.xml"/>
	      <property name="dataSource" ref="dataSource"/>
	  </bean>
      -->
    <!--  <aop:aspectj-autoproxy></aop:aspectj-autoproxy> -->
</beans>

